{"name":"Has pages","tagline":"Simple Engine to allow Rails app to have \"static\" pages rendered in a layout.","body":"### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n### Requirements\r\n============\r\nRails 4\r\n\r\n### Installation\r\n============\r\nGemfile:\r\n\r\ngem 'has_pages', git: \"https://github.com/beautifulcode/has_pages.gitÂ¬\r\n\r\n\r\n### Example Use\r\n============\r\n\r\nYou have a set of semi static pages that should be served if no other routes are matched.\r\n\r\nFor example, given the following request /about/company, this will look in app/views/pages/about/company\r\n\r\nThe page will be rendered in the application layout by default, but will use an \"about\" layout if it exists.\r\n\r\nThis also provides page caching by default of these pages so Rails doesn't get involved on further requests to the same path.\r\n\r\nEventually, a macro of has_pages(options) can be called from your application controller to customize the behaviour of the plugin.\r\n\r\nSome macro options could include:\r\n\r\n  * Caching On/Off\r\n  * Cache Directory\r\n  * Alternate Layout(s)\r\n  * Path Prefix\r\n\r\n\r\nCopyright (c) 2015 Aaron Glenn, released under the MIT license","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}